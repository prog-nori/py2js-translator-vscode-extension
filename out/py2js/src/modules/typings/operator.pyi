#! /usr/bin/env python3
#! -*- coding: utf-8 -*-

import ast
from src.modules.nodeParser import NodeParser

class Operator(NodeParser):

    def convert_Add(self: Operator, nodes: ast.Add) -> str: ...
    def convert_Sub(self: Operator, nodes: ast.Sub) -> str: ...
    def convert_Mult(self: Operator, nodes: ast.Mult) -> str: ...
    def convert_MatMult(self: Operator, nodes: ast.MatMult) -> str: ...
    def convert_Div(self: Operator, nodes: ast.Div) -> str: ...
    def convert_Mod(self: Operator, nodes: ast.Mod) -> str: ...
    def convert_Pow(self: Operator, nodes: ast.Pow) -> str: ...
    def convert_LShift(self: Operator, nodes: ast.LShift) -> str: ...
    def convert_RShift(self: Operator, nodes: ast.RShift) -> str: ...
    def convert_BitOr(self: Operator, nodes: ast.BitOr) -> str: ...
    def convert_BitXor(self: Operator, nodes: ast.BitXor) -> str: ...
    def convert_BitAnd(self: Operator, nodes: ast.BitAnd) -> str: ...
    def convert_FloorDiv(self: Operator, nodes: ast.FloorDiv) -> str: ...