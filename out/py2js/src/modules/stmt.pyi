#! /usr/bin/env python3
#! -*- coding: utf-8 -*-

import ast
from py2js import Py2JS

class Stmt:
    def convert_FunctionDef(self: Stmt, nodes: ast.FunctionDef, parse: Py2JS.parse) -> str: ...
    def convert_AsyncFunctionDef(self: Stmt, nodes: ast.AsyncFunctionDef, parse: Py2JS.parse) -> str: ...
    def convert_ClassDef(self: Stmt, nodes: ast.ClassDef, parse: Py2JS.parse) -> str: ...
    def convert_Return(self: Stmt, nodes: ast.Return, parse: Py2JS.parse) -> str: ...
    def convert_Delete(self: Stmt, nodes: ast.Delete, parse: Py2JS.parse) -> str: ...
    def convert_Assign(self: Stmt, nodes: ast.Assign, parse: Py2JS.parse) -> str: ...
    def convert_AugAssign(self: Stmt, nodes: ast.AugAssign, parse: Py2JS.parse) -> str: ...
    def convert_AnnAssign(self: Stmt, nodes: ast.AnnAssign, parse: Py2JS.parse) -> str: ...
    def convert_For(self: Stmt, nodes: ast.For, parse: Py2JS.parse) -> str: ...
    def convert_AsyncFor(self: Stmt, nodes: ast.AsyncFor, parse: Py2JS.parse) -> str: ...
    def convert_While(self: Stmt, nodes: ast.While, parse: Py2JS.parse) -> str: ...
    def convert_If(self: Stmt, nodes: ast.If, parse: Py2JS.parse) -> str: ...
    def convert_With(self: Stmt, nodes: ast.With, parse: Py2JS.parse) -> str: ...
    def convert_AsyncWith(self: Stmt, nodes: ast.AsyncWith, parse: Py2JS.parse) -> str: ...
    def convert_Raise(self: Stmt, nodes: ast.Raise, parse: Py2JS.parse) -> str: ...
    def convert_Try(self: Stmt, nodes: ast.Try, parse: Py2JS.parse) -> str: ...
    def convert_Assert(self: Stmt, nodes: ast.Assert, parse: Py2JS.parse) -> str: ...
    def convert_Import(self: Stmt, nodes: ast.Import, parse: Py2JS.parse) -> str: ...
    def convert_ImportFrom(self: Stmt, nodes: ast.ImportFrom, parse: Py2JS.parse) -> str: ...    
    def convert_Global(self: Stmt, nodes: ast.Global, parse: Py2JS.parse) -> str: ...
    def convert_Nonlocal(self: Stmt, nodes: ast.Nonlocal, parse: Py2JS.parse) -> str: ...
    def convert_Expr(self: Stmt, nodes: ast.Expr, parse: Py2JS.parse) -> str: ...
    def convert_Pass(self: Stmt, nodes: ast.Pass, parse: Py2JS.parse) -> str: ...
    def convert_Break(self: Stmt, nodes: ast.Break, parse: Py2JS.parse) -> str: ...
    def convert_Continue(self: Stmt, nodes: ast.Continue, parse: Py2JS.parse) -> str: ...