#! /usr/bin/env python3
#! -*- coding: utf-8 -*-

import ast
from py2js import Py2JS

class Stmt:
    def convert_FunctionDef(self: Stmt, nodes: ast.FunctionDef) -> str: ...
    def convert_AsyncFunctionDef(self: Stmt, nodes: ast.AsyncFunctionDef) -> str: ...
    def convert_ClassDef(self: Stmt, nodes: ast.ClassDef) -> str: ...
    def convert_Return(self: Stmt, nodes: ast.Return) -> str: ...
    def convert_Delete(self: Stmt, nodes: ast.Delete) -> str: ...
    def convert_Assign(self: Stmt, nodes: ast.Assign) -> str: ...
    def convert_AugAssign(self: Stmt, nodes: ast.AugAssign) -> str: ...
    def convert_AnnAssign(self: Stmt, nodes: ast.AnnAssign) -> str: ...
    def convert_For(self: Stmt, nodes: ast.For) -> str: ...
    def convert_AsyncFor(self: Stmt, nodes: ast.AsyncFor) -> str: ...
    def convert_While(self: Stmt, nodes: ast.While) -> str: ...
    def convert_If(self: Stmt, nodes: ast.If) -> str: ...
    def convert_With(self: Stmt, nodes: ast.With) -> str: ...
    def convert_AsyncWith(self: Stmt, nodes: ast.AsyncWith) -> str: ...
    def convert_Raise(self: Stmt, nodes: ast.Raise) -> str: ...
    def convert_Try(self: Stmt, nodes: ast.Try) -> str: ...
    def convert_Assert(self: Stmt, nodes: ast.Assert) -> str: ...
    def convert_Import(self: Stmt, nodes: ast.Import) -> str: ...
    def convert_ImportFrom(self: Stmt, nodes: ast.ImportFrom) -> str: ...    
    def convert_Global(self: Stmt, nodes: ast.Global) -> str: ...
    def convert_Nonlocal(self: Stmt, nodes: ast.Nonlocal) -> str: ...
    def convert_Expr(self: Stmt, nodes: ast.Expr) -> str: ...
    def convert_Pass(self: Stmt, nodes: ast.Pass) -> str: ...
    def convert_Break(self: Stmt, nodes: ast.Break) -> str: ...
    def convert_Continue(self: Stmt, nodes: ast.Continue) -> str: ...